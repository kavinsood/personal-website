<footer class="footer h-card" role="contentinfo">
    <div class="footer__inner container">
        <p class="footer__item">
            <strong>&copy; 2022&ndash;{{ build.timestamp | dateToFormat('yyyy') }}</strong><br />
            <a class="p-name u-url" rel="me" href="{{ site.url }}">{{ author.name }}</a>
        </p>

        <p class="footer__item">
            <strong>Social</strong><br /> 
            <a href="{{ author.social.github.url }}" title="Github" rel="me">Github</a>
            <a href="{{ author.social.twitter.url }}" title="Twitter" rel="me">Twitter</a>
            <a href="{{ author.social.linkedin.url }}" title="LinkedIn">LinkedIn</a>
        </p>

        <p class="footer__item">
            <strong>Legal</strong><br />
            <a href="/privacy/">Privacy Policy</a>
        </p>

        <p class="footer__item">
            <strong>Links</strong><br />
            <a href="/blogroll/">Blogroll</a>
        </p>

        <p class="footer__item footer__item--right u-desktop-only">
            <div id="last-played">
                <!-- Dynamic content will be inserted here -->
            </div>
        </p>

        <p class="footer__item footer__item--right">
            <a href="{{ site.repo }}/tree/master/{{ page.inputPath }}" class="footer__icon" title="Edit this page on Github">
                <span class="sr-only">Edit this page on Github</span>
                {% icon "github" %}
            </a>
            <a href="{{ "/feed.xml" | url }}" class="footer__icon" title="RSS Feed">
                <span class="sr-only">RSS Feed</span>
                {% icon "feed" %}
            </a>
        </p>
    </div>
    
    <script>
        // Function to fetch the last played track
        async function fetchLastPlayed() {
            const url = `https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=Kavin05&api_key=dc458be772a2c1beb5cb3d4878975dfa&format=json&limit=1`;

            try {
                const response = await fetch(url);
                const data = await response.json();
                
                if (data.recenttracks && data.recenttracks.track && data.recenttracks.track[0]) {
                    const track = data.recenttracks.track[0];
                    const isCurrentlyListening = track.hasOwnProperty("@attr");

                    let status = isCurrentlyListening ? 'Currently listening to' : 'Last listened to';
                    let trackName = track.name;
                    let artistName = track.artist["#text"];

                    document.getElementById('last-played').innerHTML = `
                        <strong>${status}</strong><br />
                        <a href="https://last.fm/user/Kavin05" class="p-name u-url"><strong>${trackName}</strong>
                        by <strong>${artistName}</strong></a>
                    `;
                } else {
                    document.getElementById('last-played').innerHTML = `
                        <strong>Music</strong><br />
                        <a href="https://last.fm/user/Kavin05">Last.fm Profile</a>
                    `;
                }
            } catch (error) {
                console.error('Error fetching last played track:', error);
                document.getElementById('last-played').innerHTML = `
                    <strong>Music</strong><br />
                    <a href="https://last.fm/user/Kavin05">Last.fm Profile</a>
                `;
            }
        }

        // Call the function to fetch and display the last played track
        fetchLastPlayed();
    </script>
</footer>
